// -----------------------------------------------------------------
//                          CHALLENGE 04
// -----------------------------------------------------------------
//
// Goal: Create a reusable function for getting the forecast
//
// 1. Setup the "forecast" function in utils/forecast.js
// 2. Require the function in app.js and call it as shown below
// 3. The forecast function should have three potential calls to callback:
//    - Low level error, pass string for error
//    - Coordinate error, pass string for error
//    - Success, pass forecast string for data (same format as from before)

const request = require('request')

const forecast = (latitude, longitude, callback) => {

    const url = 'http://api.weatherstack.com/current?access_key=50410865b2ce26772d65c16b1b663f1f&query=' + latitude + ',' + longitude

    request({ url, json: true }, (error, { body }) => {
        if (error) {
            callback('Unable to connect to weather services. Check your connection', undefined)
        } else if (body.error) {
            callback('Unable to find location.', undefined)
        } else {
            let temp = body.current.temperature;
            let rain = body.current.precip;
            let feelsLike = body.current.feelslike;
            let weatherDescs = body.current.weather_descriptions[0];
            // callback(undefined, `
            // ${weatherDescs}. It is currently ${temp} degrees out. There is a ${rain}% chance of rain.
            // ${weatherDescs}. It is currently ${temp} degrees out. It feels like ${feelsLike} degrees out.           
            // `)
            callback(undefined, weatherDescs + '. It is currently ' + temp + ' degrees out. It feels like ' + feelsLike + ' degrees out. There is a ' + rain + '% chance of rain.')
        }
    })
}
module.exports = forecast;